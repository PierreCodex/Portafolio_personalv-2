<header
  class="fixed top-0 left-0 w-full z-[300] border-b border-black/10 dark:border-white/10 md:bg-transparent bg-white/85 dark:bg-[color-mix(in_oklab,var(--body-color2)_92%,black_8%)] md:dark:bg-transparent backdrop-blur supports-[backdrop-filter]:backdrop-blur transition-colors"
>
  <div
    class="relative flex justify-between items-center py-3 w-full max-w-4xl px-4 mx-auto"
  >
    <div class="flex items-center gap-3">
      <img class="w-12 h-12" src="/src/assets/LogoPCC (1).svg" alt="Logo" />
      <h1 class="text-xl font-semibold">PierreCodex</h1>
    </div>

    <!-- Botón Hamburguesa -->
    <button
      id="navToggle"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="primary-nav"
      class="md:hidden p-2 rounded focus:outline-none focus-visible:ring focus-visible:ring-blue-500 hover:bg-black/5 dark:hover:bg-white/10 transition"
    >
      <svg
        id="navIcon"
        class="w-6 h-6"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M3 6h18M3 12h18M3 18h18"></path>
      </svg>
    </button>

    <nav
      id="primary-nav"
      class="mobile-overlay hidden md:flex md:static inset-0 md:inset-auto flex-col md:flex-row md:items-center gap-10 md:gap-6 w-full md:w-auto px-6 md:px-0 pt-[calc(var(--header-height)+0.75rem)] md:pt-0 pb-14 md:pb-0 md:bg-transparent md:dark:bg-transparent z-[400] overflow-y-auto opacity-0 md:opacity-100 md:scale-100 transition-all duration-300 ease-out pointer-events-none md:pointer-events-auto"
      aria-label="Menú principal"
      data-portal="mobile"
    >
      <!-- Bloque branding sólo móvil -->
      <div class="md:hidden w-full flex flex-col items-center mb-4 animate-fade-in">
        <p class="text-[10px] tracking-[.2em] uppercase text-[--text-color-light] mb-3">Menu</p>
        <h2 class="text-lg font-semibold flex items-center gap-4 text-[--title-color] dark:text-[--title-color2]">
          <span class="h-px w-12 bg-gradient-to-r from-transparent via-[--first-color]/70 to-[--first-color]/10"></span>
          PierreCodex
          <span class="h-px w-12 bg-gradient-to-r from-[--first-color]/10 via-[--first-color]/70 to-transparent"></span>
        </h2>
      </div>
  <ul class="flex flex-col md:flex-row md:items-center gap-6 md:gap-6 w-full md:w-auto mx-auto max-w-xs md:max-w-none text-center md:text-left relative">
        <li><a class="nav-link mobile-nav-link" href="#hero">Home</a></li>
        <li><a class="nav-link mobile-nav-link" href="#skills">Skills</a></li>
        <li><a class="nav-link mobile-nav-link" href="#projects">Proyectos</a></li>
        <li><a class="nav-link mobile-nav-link" href="#education">Educación</a></li>
      </ul>
      <div class="mt-auto md:hidden flex justify-center pt-8">
        <a href="#" class="cv-btn inline-flex items-center gap-2 px-5 py-3 rounded-md text-sm font-medium tracking-wide">
          Descargar CV
          <span aria-hidden="true">↓</span>
        </a>
      </div>
    </nav>

    <div class="flex items-center gap-3">
      <button
        id="themeToggle"
        type="button"
        class="mt-2 md:mt-0 nav-link flex items-center gap-1 px-2 py-1 rounded-md border border-transparent hover:border-[--first-color]/40 hover:bg-black/5 dark:hover:bg-white/10 transition-colors"
        aria-label="Cambiar tema"
        title="Cambiar tema"
      >
        <span class="inline-flex" id="themeIcon"></span>
      </button>
    </div>
  </div>

  <script>
    // @ts-nocheck
    document.addEventListener('DOMContentLoaded', () => {
  const btn = document.getElementById('navToggle');
  const nav = document.getElementById('primary-nav');
      const icon = document.getElementById('navIcon');
      const header = document.querySelector('header');
      const links = nav ? Array.from(nav.querySelectorAll('a')) : [];
      const sectionIds = links
        .map(a => a.getAttribute('href') || '')
        .filter(h => h.startsWith('#'))
        .map(h => h.slice(1));

      // Menú móvil
      if (btn && nav) {
        const resetIcon = () => { if (icon) icon.innerHTML = '<path d="M3 6h18M3 12h18M3 18h18" />'; };
        // Portal: mover nav fuera del header para stacking correcto en mobile
        const ensurePortal = () => {
          if (window.innerWidth < 768) {
            if (!nav.classList.contains('nav-portal')) {
              document.body.appendChild(nav);
              nav.classList.add('nav-portal');
              nav.classList.add('fixed');
              nav.classList.add('inset-0');
            }
          } else {
            if (nav.classList.contains('nav-portal')) {
              header.appendChild(nav);
              nav.classList.remove('nav-portal');
              nav.classList.remove('fixed');
              nav.classList.remove('inset-0');
              nav.classList.remove('opacity-0');
            }
          }
        };
        ensurePortal();
        const openNav = () => {
          nav.classList.remove('hidden');
          requestAnimationFrame(() => {
            nav.classList.remove('opacity-0');
            nav.classList.remove('scale-[1.02]');
            nav.classList.remove('pointer-events-none');
            document.body.style.overflow = 'hidden';
            document.body.classList.add('nav-open');
          });
          if (icon) icon.innerHTML = '<path d="M6 6l12 12M6 18L18 6" />';
        };
        const closeNav = () => {
          nav.classList.add('opacity-0');
          nav.classList.add('scale-[1.02]');
          nav.classList.add('pointer-events-none');
          document.body.style.overflow = '';
          document.body.classList.remove('nav-open');
          nav.addEventListener('transitionend', function handler(e){
            if (e.propertyName === 'opacity') { nav.classList.add('hidden'); nav.removeEventListener('transitionend', handler); }
          });
          resetIcon();
        };
        // Cierre al click en el fondo vacío del overlay
        nav.addEventListener('click', (e) => {
          if (e.target === nav && btn.getAttribute('aria-expanded') === 'true') {
            btn.setAttribute('aria-expanded', 'false');
            closeNav();
          }
        });
        btn.addEventListener('click', () => {
          const expanded = btn.getAttribute('aria-expanded') === 'true';
          if (expanded) { closeNav(); } else { openNav(); }
          btn.setAttribute('aria-expanded', String(!expanded));
        });
        links.forEach(a => a.addEventListener('click', () => {
          if (window.innerWidth < 768 && btn.getAttribute('aria-expanded') === 'true') {
            btn.setAttribute('aria-expanded', 'false');
            closeNav();
          }
        }));
        window.addEventListener('resize', () => {
          ensurePortal();
          if (window.innerWidth >= 768) {
            nav.classList.remove('hidden','opacity-0');
            document.body.style.overflow = '';
            btn.setAttribute('aria-expanded','true');
            resetIcon();
          } else {
            btn.setAttribute('aria-expanded','false');
            if (!nav.classList.contains('hidden')) closeNav();
          }
        });
      }

      // Scrollspy
  /** @param {string|null} id */
  const setActive = (id) => {
        links.forEach(a => {
          const href = a.getAttribute('href');
          const match = id && href && href.substring(1) === id;
          a.classList.toggle('nav-link-active', !!match);
          if (match) a.setAttribute('aria-current', 'true'); else a.removeAttribute('aria-current');
        });
      };
      function onScroll() {
        const headerH = header ? header.offsetHeight : 0;
        const scrollPos = window.scrollY + headerH + 24;
        let current = null;
        for (const id of sectionIds) {
          const el = document.getElementById(id);
          if (el && el.offsetTop <= scrollPos) current = id;
        }
        setActive(current);
      }
      if (sectionIds.length) {
        document.addEventListener('scroll', onScroll, { passive: true });
        onScroll();
      }

      // Tema
      const themeBtn = document.getElementById('themeToggle');
      const themeIcon = document.getElementById('themeIcon');
      const setThemeVisual = () => {
        const dark = document.documentElement.classList.contains('dark');
        if (themeIcon) themeIcon.innerHTML = dark
          ? '<svg width="20" height="20" viewBox="0 0 24 24" stroke="currentColor" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"/></svg>'
          : '<svg width="20" height="20" viewBox="0 0 24 24" stroke="currentColor" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"/><path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"/>';
        if (themeBtn) themeBtn.setAttribute('aria-label', dark ? 'Cambiar a modo claro' : 'Cambiar a modo oscuro');
      };
      if (themeBtn) {
        setThemeVisual();
        themeBtn.addEventListener('click', () => {
          const isDark = document.documentElement.classList.toggle('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
          setThemeVisual();
        });
      }
    });
  </script>
</header>
